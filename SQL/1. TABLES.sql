CREATE TABLE EMPLOYEES
(
    USERNAME    VARCHAR(20)     NOT NULL,
    PASSWORD    VARCHAR(10)     NOT NULL
);
ALTER TABLE EMPLOYEES ADD PRIMARY KEY (USERNAME);
INSERT INTO EMPLOYEES VALUES('admin', 'admin');

CREATE TABLE PRODUCTS
(
    CODE        VARCHAR(255)    NOT NULL,
    "NAME"      VARCHAR(255)    NOT NULL,
    COST        DOUBLE          NOT NULL DEFAULT 0,
    PRICE       DOUBLE          NOT NULL DEFAULT 0,
    QUANTITY    INTEGER         NOT NULL DEFAULT 0,
    DISCOUNT    DOUBLE          NOT NULL DEFAULT 0
);
ALTER TABLE PRODUCTS ADD PRIMARY KEY (CODE);

CREATE TABLE CUSTOMERS
(
    ID          INTEGER         NOT NULL,
    "NAME"      VARCHAR(255)    NOT NULL,
    PHONE       VARCHAR(11),
    ADDRESS     VARCHAR(255)
);
ALTER TABLE CUSTOMERS ADD PRIMARY KEY (ID);

CREATE TABLE SUPPLIERS
(
    ID          INTEGER         NOT NULL,
    "NAME"      VARCHAR(255)    NOT NULL,
    PHONE       VARCHAR(11),
    ADDRESS     VARCHAR(255)
);
ALTER TABLE SUPPLIERS ADD PRIMARY KEY (ID);

CREATE TABLE SAFE
(
    ID          INTEGER         NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    DATE        TIMESTAMP       NOT NULL,
    EMPLOYEE    VARCHAR(20)     NOT NULL DEFAULT 'admin',
    STATEMENT   VARCHAR(255)    NOT NULL,
    PRICE       DOUBLE          NOT NULL
);
ALTER TABLE SAFE ADD PRIMARY KEY (ID);
ALTER TABLE SAFE ADD FOREIGN KEY (EMPLOYEE) REFERENCES EMPLOYEES(USERNAME);

CREATE TABLE EXPENSES
(
    ID          INTEGER         NOT NULL,
    SAFEID      INTEGER         NOT NULL,
    EXPENSE     VARCHAR(255)    NOT NULL,
    COST        DOUBLE          NOT NULL
);
ALTER TABLE EXPENSES ADD PRIMARY KEY (ID);
ALTER TABLE EXPENSES ADD FOREIGN KEY (SAFEID) REFERENCES SAFE(ID) ON DELETE CASCADE;

CREATE TABLE SALEINVOICE
(
    "NO"        INTEGER         NOT NULL,
    SAFEID      INTEGER         NOT NULL,
    CUSTOMERID  INTEGER,
    TOTAL       DOUBLE          NOT NULL,
    DISCOUNT    DOUBLE          NOT NULL
);
ALTER TABLE SALEINVOICE ADD PRIMARY KEY ("NO");
ALTER TABLE SALEINVOICE ADD FOREIGN KEY (SAFEID) REFERENCES SAFE(ID) ON DELETE CASCADE;
ALTER TABLE SALEINVOICE ADD FOREIGN KEY (CUSTOMERID) REFERENCES CUSTOMERS(ID) ON DELETE SET NULL;

CREATE TABLE SALEINVOICE_PRODUCT
(
    INVOICENO   INTEGER         NOT NULL,
    PRODUCTCODE VARCHAR(255)    NOT NULL,
    PRICE       DOUBLE          NOT NULL,
    QUANTITY    INTEGER         NOT NULL,
    DISCOUNT    DOUBLE          NOT NULL,
    TOTAL       DOUBLE          NOT NULL GENERATED ALWAYS AS (PRICE * QUANTITY - DISCOUNT)
);
ALTER TABLE SALEINVOICE_PRODUCT ADD FOREIGN KEY (INVOICENO) REFERENCES SALEINVOICE("NO") ON DELETE CASCADE;
ALTER TABLE SALEINVOICE_PRODUCT ADD FOREIGN KEY (PRODUCTCODE) REFERENCES PRODUCTS(CODE);

CREATE TABLE RETURNINVOICE
(
    "NO"          INTEGER       NOT NULL,
    SAFEID        INTEGER       NOT NULL,
    SALEINVOICENO INTEGER       NOT NULL,
    TOTAL         DOUBLE        NOT NULL
);
ALTER TABLE RETURNINVOICE ADD PRIMARY KEY ("NO");
ALTER TABLE RETURNINVOICE ADD FOREIGN KEY (SAFEID) REFERENCES SAFE(ID) ON DELETE CASCADE;
ALTER TABLE RETURNINVOICE ADD FOREIGN KEY (SALEINVOICENO) REFERENCES SALEINVOICE("NO") ON DELETE CASCADE;

CREATE TABLE RETURNINVOICE_PRODUCT
(
    INVOICENO   INTEGER         NOT NULL,
    PRODUCTCODE VARCHAR(255)    NOT NULL,
    QUANTITY    INTEGER         NOT NULL
);
ALTER TABLE RETURNINVOICE_PRODUCT ADD FOREIGN KEY (INVOICENO) REFERENCES RETURNINVOICE("NO") ON DELETE CASCADE;
ALTER TABLE RETURNINVOICE_PRODUCT ADD FOREIGN KEY (PRODUCTCODE) REFERENCES PRODUCTS(CODE);

CREATE TABLE PURCHASEINVOICE
(
    "NO"        INTEGER         NOT NULL,
    SAFEID      INTEGER         NOT NULL,
    SUPPLIERID  INTEGER,
    TOTAL       DOUBLE          NOT NULL
);
ALTER TABLE PURCHASEINVOICE ADD PRIMARY KEY ("NO");
ALTER TABLE PURCHASEINVOICE ADD FOREIGN KEY (SAFEID) REFERENCES SAFE(ID) ON DELETE CASCADE;
ALTER TABLE PURCHASEINVOICE ADD FOREIGN KEY (SUPPLIERID) REFERENCES SUPPLIERS(ID) ON DELETE SET NULL;

CREATE TABLE PURCHASEINVOICE_PRODUCT
(
    INVOICENO   INTEGER         NOT NULL,
    PRODUCTCODE VARCHAR(255)    NOT NULL,
    COST        DOUBLE          NOT NULL,
    QUANTITY    INTEGER         NOT NULL,
    TOTAL       DOUBLE          NOT NULL GENERATED ALWAYS AS (COST * QUANTITY)
);
ALTER TABLE PURCHASEINVOICE_PRODUCT ADD FOREIGN KEY (INVOICENO) REFERENCES PURCHASEINVOICE("NO") ON DELETE CASCADE;
ALTER TABLE PURCHASEINVOICE_PRODUCT ADD FOREIGN KEY (PRODUCTCODE) REFERENCES PRODUCTS(CODE);